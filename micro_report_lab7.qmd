---
dartru
dartru
title: "Micro_report_lab7"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

# PCA tidyverse style

For our PCA example, we'll need the packages tidyverse and broom. Note that as of this writing, we need the current development version of broom [because of a bug](https://github.com/tidymodels/broom/issues/923) in `tidy.prcomp()`. We'll also use the cowplot package for plot themes.

```{r}
library(tidyverse)
# ── Attaching packages ────────────────────────────────── tidyverse 1.3.0 ──
# ✓ ggplot2 3.3.2     ✓ purrr   0.3.4
# ✓ tibble  3.0.3     ✓ dplyr   1.0.2
# ✓ tidyr   1.1.2     ✓ stringr 1.4.0
# ✓ readr   1.3.1     ✓ forcats 0.5.0
# ── Conflicts ───────────────────────────────────── tidyverse_conflicts() ──
# x dplyr::filter() masks stats::filter()
# x dplyr::lag()    masks stats::lag()
library(broom)  # devtools::install_github("tidymodels/broom")
library(cowplot)
```

```{r}
biopsy <- read_csv("https://wilkelab.org/classes/SDS348/data_sets/biopsy.csv")
# Parsed with column specification:
# cols(
#   clump_thickness = col_double(),
#   uniform_cell_size = col_double(),
#   uniform_cell_shape = col_double(),
#   marg_adhesion = col_double(),
#   epithelial_cell_size = col_double(),
#   bare_nuclei = col_double(),
#   bland_chromatin = col_double(),
#   normal_nucleoli = col_double(),
#   mitoses = col_double(),
#   outcome = col_character()
# )

```

## Look at the data in PC coordinates

We start by running the PCA and storing the result in a variable `pca_fit`. There are two issues to consider here. First, the `prcomp()` function can only deal with numeric columns, so we need to remove all non-numeric columns from the data. This is straightforward using the `where(is.numeric)` tidyselect construct. Second, we normally want to scale the data values to unit variance before PCA. We do so by using the argument `scale = TRUE` in `prcomp()`.

```{r}
pca_fit <- biopsy %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data
```
HEAD

As an alternative to `scale = TRUE`, we could also have scaled the data by explicitly invoking the `scale()` function.

```{r}
pca_fit <- biopsy %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  scale() %>% # scale data
  prcomp() # do PCA
```

Now, we want to plot the data in PC coordinates. In general, this means combining the PC coordinates with the original dataset, so we can color points by categorical variables present in the original data but removed for the PCA. We do this with the `augment()` function from broom, which takes as arguments the fitted model and the original data. The columns containing the fitted coordinates are called `.fittedPC1`, `.fittedPC2`, etc.

```{r}
pca_fit %>%
  augment(biopsy) %>% # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = outcome)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(malignant = "#D55E00", benign = "#0072B2")
  ) +
  theme_half_open(12) + background_grid()
```

## Look at the data in PC coordinates
=======
=======
=======
main
title: "micro_report_lab7 by Group 25"
format:
  html:
    embed-resources: true
editor: visual
---
Created by Group 25 of the R for Bio Data Science Course, Autumn Semester

| Student IDs | Names                    |
|------------:|--------------------------|
|     s154146 | Andreas Høyer Kongsgaard |
|     s221047 | Darya Trubach            |
|     s194360 | Emilie Sofie Engdal      |
|     s230705 | Jennifer Fortuny I Zhan  |
|     s215112 | Manon Kirstine Chevalier |


# PCA tidyverse style

## Jennifer: Look at the data in PC coordinates

## Jennifer: Look at the variance explained by each PC

